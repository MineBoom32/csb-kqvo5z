{"version":3,"sources":["mapLocation.js","distanceDisplay.js","map.js","App.js","index.js"],"names":["MapLocation","props","useState","className","strokeWidth","active","cx","position","x","cy","y","onClick","userSelected","r","DistanceDisplay","lastLocation","totalDistance","locations","reduce","accumulator","location","dist","dx","dy","Math","sqrt","toFixed","Map","setLocations","selectedPoints","setSelectedPoints","useEffect","fetch","then","res","json","dataObject","forEach","entry","locationEls","map","console","log","push","selectLocation","id","linesList","length","i","p1","p2","x1","x2","y1","y2","stroke","width","height","App","rootElement","document","getElementById","createRoot","render"],"mappings":"uMAGe,SAASA,EAAYC,GAClC,MAA4BC,oBAAS,GAArC,6BAEA,OACE,wBACEC,UAAU,WACVC,YAAaH,EAAMI,OAAS,EAAI,EAChCC,GAAIL,EAAMM,SAASC,EACnBC,GAAIR,EAAMM,SAASG,EACnBC,QAASV,EAAMW,aACfC,EAAE,MAGP,CCdc,SAASC,EAAgBb,GACtC,IAAIc,EAAe,KACfC,EAAgBf,EAAMgB,UAAUC,QAAO,SAACC,EAAaC,GACvD,IAAIC,EAAO,EAEX,GAAoB,MAAhBN,EAAsB,CACxB,IAAIO,EAAKF,EAASb,SAASC,EAAIO,EAAaR,SAASC,EACjDe,EAAKH,EAASb,SAASG,EAAIK,EAAaR,SAASG,EACrDW,EAAOG,KAAKC,KAAKH,EAAKA,EAAKC,EAAKA,EACjC,CAID,OAFAR,EAAeK,EAERD,EAAcE,CACtB,GAAE,GAIH,OAFAL,EAAgBA,EAAcU,QAAQ,GAE/B,6CAAgBV,IACxB,CCjBc,SAASW,IACtB,MAAkCzB,mBAAS,IAA3C,mBAAOe,EAAP,KAAkBW,EAAlB,KACA,EAA4C1B,mBAAS,IAArD,mBAAO2B,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WACRC,MAAM,kBACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GACLA,EAAWC,SAAQ,SAACC,GAClBA,EAAMjC,QAAS,CAChB,IAEDuB,EAAaQ,EACd,GACJ,IAED,IAAMG,EAActB,EAAUuB,KAAI,SAACpB,GAAD,OAChC,cAACpB,EAAD,CACEO,SAAUa,EAASb,SAEnBF,OAAQe,EAASf,OACjBO,aAAc,YAkBlB,SAAwBQ,GACtBA,EAASf,QAAS,EAClBuB,EAAa,YAAIX,IACjBwB,QAAQC,IAAIzB,GAEZY,EAAec,KAAKvB,GACpBU,EAAkB,YAAID,IACtBY,QAAQC,IAAIb,EACb,CAzBKe,CAAexB,EAChB,GAJIA,EAASyB,GAHgB,IAW9BC,EAAY,GAEhB,GAAIjB,EAAekB,OAAS,EAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAekB,OAAS,EAAGC,IAAK,CAClD,IAAIC,EAAKpB,EAAemB,GAAGzC,SACvB2C,EAAKrB,EAAemB,EAAI,GAAGzC,SAC/BuC,EAAUH,KACR,sBAAMQ,GAAIF,EAAGzC,EAAG4C,GAAIF,EAAG1C,EAAG6C,GAAIJ,EAAGvC,EAAG4C,GAAIJ,EAAGxC,EAAG6C,OAAO,UAExD,CAaH,OACE,gCACE,cAACzC,EAAD,CAAiBG,UAAWY,IAC5B,sBAAK2B,MAAM,MAAMC,OAAO,MAAxB,UACGlB,EACAO,OAIR,CC3Dc,SAASY,IACtB,OACE,qBAAKvD,UAAU,MAAf,SACE,cAACwB,EAAD,KAGL,CCJD,IAAMgC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACL,EAAD,M","file":"static/js/main.36d4ae32.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./mapStyle.css\";\r\n\r\nexport default function MapLocation(props) {\r\n  const [active, setActive] = useState(false);\r\n\r\n  return (\r\n    <circle\r\n      className=\"location\"\r\n      strokeWidth={props.active ? 3 : 0}\r\n      cx={props.position.x}\r\n      cy={props.position.y}\r\n      onClick={props.userSelected}\r\n      r=\"12\"\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useHooks } from \"react\";\r\n\r\nexport default function DistanceDisplay(props) {\r\n  let lastLocation = null;\r\n  let totalDistance = props.locations.reduce((accumulator, location) => {\r\n    let dist = 0;\r\n\r\n    if (lastLocation != null) {\r\n      let dx = location.position.x - lastLocation.position.x;\r\n      let dy = location.position.y - lastLocation.position.y;\r\n      dist = Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n\r\n    lastLocation = location;\r\n\r\n    return accumulator + dist;\r\n  }, 0);\r\n\r\n  totalDistance = totalDistance.toFixed(0);\r\n\r\n  return <div>Distance: {totalDistance}</div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MapLocation from \"./mapLocation\";\r\nimport DistanceDisplay from \"./distanceDisplay\";\r\n\r\nexport default function Map() {\r\n  const [locations, setLocations] = useState([]);\r\n  const [selectedPoints, setSelectedPoints] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"data/data.json\")\r\n      .then((res) => res.json())\r\n      .then((dataObject) => {\r\n        dataObject.forEach((entry) => {\r\n          entry.active = false;\r\n        });\r\n\r\n        setLocations(dataObject);\r\n      });\r\n  });\r\n\r\n  const locationEls = locations.map((location) => (\r\n    <MapLocation\r\n      position={location.position}\r\n      key={location.id}\r\n      active={location.active}\r\n      userSelected={() => {\r\n        selectLocation(location);\r\n      }}\r\n    />\r\n  ));\r\n\r\n  let linesList = [];\r\n\r\n  if (selectedPoints.length > 1) {\r\n    for (var i = 0; i < selectedPoints.length - 1; i++) {\r\n      let p1 = selectedPoints[i].position;\r\n      let p2 = selectedPoints[i + 1].position;\r\n      linesList.push(\r\n        <line x1={p1.x} x2={p2.x} y1={p1.y} y2={p2.y} stroke=\"black\" />\r\n      );\r\n    }\r\n  }\r\n\r\n  function selectLocation(location) {\r\n    location.active = true;\r\n    setLocations([...locations]);\r\n    console.log(locations);\r\n\r\n    selectedPoints.push(location);\r\n    setSelectedPoints([...selectedPoints]);\r\n    console.log(selectedPoints);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DistanceDisplay locations={selectedPoints} />\r\n      <svg width=\"500\" height=\"500\">\r\n        {locationEls}\r\n        {linesList}\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport Map from \"./map\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Map />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}